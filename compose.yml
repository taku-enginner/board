version: '3.8'  # Docker Compose のバージョンを指定

services:  # サービスの定義開始
  db:  # データベースサービスの定義
    image: postgres:latest  # 使用するイメージを指定
    platform: linux/amd64  # プラットフォームを指定
    environment:  # 環境変数の設定
      TZ: Asia/Tokyo  # タイムゾーンを設定
      POSTGRES_PASSWORD: password  # PostgreSQL のパスワードを設定
    volumes:  # ボリュームの設定
      - postgres_data:/var/lib/postgresql/data  # データを永続化するためのボリュームをマウント
    ports:  # ポートの設定
      - 5432:5432  # ホストの5432ポートをコンテナの5432ポートにマッピング

  redis:  # Redis サービスの定義
    image: redis:latest  # 使用するイメージを指定
    command: redis-server  # 実行するコマンドを指定
    ports:  # ポートの設定
      - 6379:6379  # ホストの6379ポートをコンテナの6379ポートにマッピング
    volumes:  # ボリュームの設定
      - redis:/var/lib/redis/data  # データを永続化するためのボリュームをマウント

  web:  # ウェブアプリケーションサービスの定義
    build:  # ビルド設定
      context: .  # ビルドコンテキストを現在のディレクトリに設定
      dockerfile: Dockerfile.dev  # 使用する Dockerfile を指定
    environment:  # 環境変数の設定
      EDITOR: vim  # エディタを vim に設定
    command: bash -c "bundle install && bundle exec rails db:prepare && rm -f tmp/pids/server.pid && yarn install && ./bin/dev"  # 実行するコマンドを指定
    tty: true  # TTY を有効にする
    stdin_open: true  # 標準入力を開いたままにする
    volumes:  # ボリュームの設定
      - .:/app  # 現在のディレクトリをコンテナの /app にマウント
      - bundle_data:/usr/local/bundle:cached  # バンドルデータを永続化するためのボリュームをマウント
      - node_modules:/app/node_modules  # Node.js モジュールを永続化するためのボリュームをマウント
    ports:  # ポートの設定
      - "3000:3000"  # ホストの3000ポートをコンテナの3000ポートにマッピング
    depends_on:  # 依存関係の設定
      - db  # db サービスに依存
      - redis  # redis サービスに依存

volumes:  # ボリュームの定義
  postgres_data:  # PostgreSQL データ用のボリューム
  bundle_data:  # バンドルデータ用のボリューム
  node_modules:  # Node.js モジュール用のボリューム
  redis:  # Redis データ用のボリューム
